{"name": "test_login_successful", "status": "broken", "statusDetails": {"message": "TypeError: Object of type set is not JSON serializable", "trace": "self = <test_requests.TestPostRequests object at 0x7f34c6bfb190>\n\n    def test_login_successful(self):\n>       post_req = requests.post('https://reqres.in/api/login',\n                                 json={'\"email\": \"eve.holt@reqres.in\",\"password\": \"cityslicka\"'},\n                                 headers={'Authorization': 'access_token QpwL5tke4Pnpja7X4'})\n\ntest_requests.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/usr/lib/python3/dist-packages/requests/api.py:119: in post\n    return request('post', url, data=data, json=json, **kwargs)\n/usr/lib/python3/dist-packages/requests/api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\n/usr/lib/python3/dist-packages/requests/sessions.py:516: in request\n    prep = self.prepare_request(req)\n/usr/lib/python3/dist-packages/requests/sessions.py:449: in prepare_request\n    p.prepare(\n/usr/lib/python3/dist-packages/requests/models.py:317: in prepare\n    self.prepare_body(data, files, json)\n/usr/lib/python3/dist-packages/requests/models.py:467: in prepare_body\n    body = complexjson.dumps(json)\n/usr/lib/python3/dist-packages/simplejson/__init__.py:395: in dumps\n    return _default_encoder.encode(obj)\n/usr/lib/python3/dist-packages/simplejson/encoder.py:296: in encode\n    chunks = self.iterencode(o, _one_shot=True)\n/usr/lib/python3/dist-packages/simplejson/encoder.py:378: in iterencode\n    return _iterencode(o, 0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <simplejson.encoder.JSONEncoder object at 0x7f34c6fb2fa0>, o = {'\"email\": \"eve.holt@reqres.in\",\"password\": \"cityslicka\"'}\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError('Object of type %s is not JSON serializable' %\n                        o.__class__.__name__)\nE       TypeError: Object of type set is not JSON serializable\n\n/usr/lib/python3/dist-packages/simplejson/encoder.py:272: TypeError"}, "start": 1612134335276, "stop": 1612134335277, "uuid": "55a2da6b-66f8-4acb-99b8-a6b5ab33113c", "historyId": "0bf03f8d4576f56c8453a0b670f8705f", "testCaseId": "acad18ea64aea065d16dbb0009f02e76", "fullName": "api_testing.homework3.test_requests.TestPostRequests#test_login_successful", "labels": [{"name": "parentSuite", "value": "api_testing.homework3"}, {"name": "suite", "value": "test_requests"}, {"name": "subSuite", "value": "TestPostRequests"}, {"name": "host", "value": "kali"}, {"name": "thread", "value": "77052-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "api_testing.homework3.test_requests"}]}